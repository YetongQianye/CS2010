1.网络协议层次模型
		网络分层就是将网络结点所要完成的数据发送或者转发,打包或拆包,控制信息的加载或者拆出的工作,分别由不同的硬件或者软件模块去完成。
	“层次”:模块.在一个大的软件协议中,我们通常把一些功能做成模块
		功能模块之间存在相互调用的关系
		
	OSI七层模型(Open System interconnect)
		符合国际标准化组织的网络互连模型
		
		应用层	各种应用程序接口
		表示层  数据格式的转换以及加密..
		会话层	建立,管理和维护会话
		传输层	建立,管理和维护端到端的连接
		网络层	IP选址以及路由选择  “数据包”
		数据链路层	提供介质的访问和链路管理
		物理层	规范电压以及电路接口
				
	TCP/IP四层模型
		应用层
			每一个应用程序有自己的应用协议(按照应用程序规定封装/解封数据)
			http/ftp/其他的私有协议(QQ协议)....
			
		传输层(TCP/UDP)
			主要的作用是解决数据如何传输的问题
			TCP:Transport Control Protocol  传输层控制协议
			是一种面向连接的传输层协议,他能提供高可靠性通信(即数据无误,数据无丢失,数据无失序,数据无重复到达)
				"面向连接"
				三次握手(两军问题)
				四次挥手
				重发机制
				窗口滑动机制(实现流量控制)
				...
			UDP:User Datagram Protocol 用户数据报协议
			是一种不可靠的无连接的协议,在数据发送前,因为不需要进行连接,所有可以进行高效率的数据传输 “实时应用”
				数据有及时性
		
		网络层(IP/ICMP/IGMP(ping))(路由器)
			可以把数据分组发送到目标网络或者主机,为了尽快的发送数据,有可能会沿不同的路径同时进行数据传输。因此,数据到达的顺序和发送的顺序可能不同,就需要上层(传输层)对数据进行排序
		数据链路层
		
2.网络数据是如何传输的(看图)
	分层传输(每一层把处理后的数据交给下一层(封包)或者上一层(拆包))
	每一层实现各自的功能和协议,并且都为上一层提供业务功能.下一层直接将上一层的数据并入到本层的数据中,然后通过添加包头和包尾实现该层业务功能。
		
3.常见的网络设备
	路由器(网络层):选择网络数据的下一站。
		   能够连接不同类型的局域网和广域网。
		如:教室内的用户的公网IP都是相同的,然后我们将数据发送给路由器,路由器通过公网IP访问互联网查询数据,然后路由器再将查询到的数据传递到私有IP地址。
		路由器利用网络寻址功能使路由器能够在网络中确定一条最佳路径。路由器的某一个接口接收到数据时,会查看数据包中的目的IP地址以判断该数据包的目的地址在当前路由表中是否存在(即路由器是否知道到达目标网络的路径),如果发现包的目标地址与本路由器的某一个接口所连接的网络地址相同,那么就会把数据发送到相应的接口,如果发现目的地址不在自己的直连网段,就会查看路由表,如果路由表中没有记录,则会把数据包转发到默认端口(外网)。
		
	集线器(hub):工作在第一层(物理层),没有任何智力,对他来说,数据仅仅是电流,当一个端口的电流到达集线器时,它只是简单的将电流传送到其他端口(数据的整流和放大)。
	
	交换机:工作在第二层(数据链路层),相对集线器来说,智能一点点,对于他来说,网络数据就是MAC地址的集合,能够分别出数据中的源MAC地址和目的MAC地址,但是交换机并不懂IP是什么。
		
	网关:
	
	
	













